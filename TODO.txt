--------------------------
Update doc "NEWS"

--------------------------
FOREIGN KEYS management in DSL model :

Create "ForeignKeysBuilder V2" with only model references
( cf DslModelForeignKeyAttribute )
fkBuilder.buildForeignKeys(entity);
NB : updateAttributes() : attribute. setFKComposite(true) setFKSimple(true)  setReferencedEntityClassName(entname)
setReferencedEntityClassName(entityName) : priority to simple FK if any

Attribute : getReferencedEntityClassName
$attrib".referencedEntityName" : used in many templates for 
       combo-box, C# ForeignKey, spring MVC, create table (.py)

Add 'ordinal' in @FK (optional )
  @FK( ForeignKeyName, ReferencedEntity.referencedAttribute, ordinal )

--------------------------
Check duplicate annotation :
 - Field OK  ( attribute and link )
 - Entity : TODO
TO TEST

Check scope  annotation for all levels (ENTITY, ATTR, LINK )
TO TEST
 
Check duplicate tag  ???

Create specific classes used in entity and field :
(? -> NO) - AnnotationSet
(x) - TagSet  --> TagContainer & Tags

 --------------------------

(X) Annotations at ENTITY level

(x) Tags at ENTITY level 
(x) Tags at LINK level 

 --------------------------
(x) Check duplicated field :
		entity.addField( buildField("foo", DomainNeutralTypes.STRING) );
		entity.addField( buildField("foo", DomainNeutralTypes.INTEGER) );

 --------------------------

(x) invalid type 'Employee[]'
DONE

 --------------------------

(x) @GeneratedValue : error with TABLE & SEQUENCE
DONE

 --------------------------
 PARSER V2 
 --------------------------
  Error : @Label ("Identifier" ) 
  unexpected double quote (ElementParser) 
DONE : => unexpected '(' after ' '
 
 --------------------------
  Check Entity without fields :
  Employee5 {
   // no field defined in this entity
  }
OK : not an error

 --------------------------
+ check JUnit errors

Errors with "," in "{ ... }"
  @Id, : invalid name
  invalid element ','(annotation or tag expected)
  
  => check invalid characters in Annotation or Tag name ( ',' detection )
  
