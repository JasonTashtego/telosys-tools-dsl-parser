
======================================================================
   W I P  
======================================================================
@FK(xx,xxx.xx)  ( WIP )
  . Test JUnit / Parser : OK
  . Convert : 
   DONE / - Parser.java : @FK not unique for each field ( no error if already defined )

======================================================================
   TO DO 
======================================================================

   

TODO :
  attribute.isFK() ; 
  attribute.isFKSimple() ; 
  attribute.isFKComposite() ; 

cf DB MODEL 

-------------------------------------------------------

Fix bug in code gen with jpa.xxx when mappedBy="null" !   ( WIP )

-------------------------------------------------------

Annotations and tags at Entity level

-------------------------------------------------------

Change Licence header

======================================================================
======================================================================

All links out of attributes ????  ( with @FK )

	gender : Gender; // in attributes ( "pseudo FK" )

	country : Country[];  // not in attributes ( due to OneToMay cardinality )

-------------------------------------------------------

String getDateAfterValue() ;
    @After(2012-05-23) // ISO format (fixed)

String getDateBeforeValue() ;
    @Before(2012-05-23) // ISO format (fixed)

-------------------------------------------------------

Integer   getMaxLength() ; ???  @SizeMax
Integer   getMinLength() ; ???  @SizeMin

BigDecimal getMaxValue() ; ???  @Max
BigDecimal getMinValue() ; ???  @Min

-------------------------------------------------------
JPA ???
  @OneToMany(xxxx)
  @OneToOne(xxx)
  @ManyToOne(xxx)
  @ManyToMany(xxxx)
  @MappedBy(xx)


======================================================================
   DONE 
======================================================================

Allow composite ID / Primary Key :
   @IdPart 
   or 
x  @Id multiple 
   or 
   @Id1, @Id2, @Id3, @Id4, ... @Id9
 
-------------------------------------------------------
String getDefaultValue();    
    @DefaultValue(ab c)  // trim
    @DefaultValue(123)   // trim
    @DefaultValue(true)  // trim
    @DefaultValue(" ab c ") // no trim inside ""  
    @DefaultValue(' ab c ') // no trim inside '' 

String getInitialValue() ;
    @InitialValue(ab c)  // trim
    @InitialValue(123)   // trim
    @InitialValue(true)  // trim
    @InitialValue(" ab c ") // no trim inside ""  

String getLabel();
    @Label(abc)  // trim
    @Label(" abc ")  // no trim inside ""  

String getInputType();  
    @InputType(abc)   // trim
    @InputType("abc") // no trim inside "" 

String getPattern(); 
    @Pattern(abc)   // trim
    @Pattern("abc") // no trim inside "" 


String getDatabaseComment() ;
    @DbComment(abc) 

String getDatabaseDefaultValue();
    @DbDefaultValue(abc) 

String getDatabaseName();
    @DbName(abc) 

String getDatabaseType();
    @DbType(abc) 
 
String getDatabaseSize();
    @DbSize(6,2)  with specific parameter => check validity for this name "DbSize"
    return String,  eg "12" or "12,45" ( eg NUMERIC(6,2) DECIMAL(10,4) etc )

-------------------------------------------------------

',' optional between annotations 

-------------------------------------------------------
